{
  "pluginType": "DB",
  "pluginId": "postgres-plugin",
  "unpublishedAction": {
    "name": "user_financial_period",
    "datasource": {
      "name": "DO_db-postgresql-adsv",
      "pluginId": "postgres-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "id": "DO_db-postgresql-adsv",
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Network Analysis Admin",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "SELECT \n  b.network_other_name,c.net_logo,\n  sum(a.amount_revenue) as tot_revenue, \n  sum(a.amount_revenue_pending) as amount_revenue_pending, \n  sum(a.amount_revenue_approved) as amount_revenue_approved, \n  sum(a.amount_revenue_rejected) as amount_revenue_rejected, \n  sum(a.amount_spent) as spent, \n  sum(a.amount_spent_plus_fee) as spent_wfees, \n  case when c.network_name_short != 'WL' then sum(a.amount_revenue)-sum(a.amount_spent_plus_fee) else (sum(a.amount_revenue)-sum(a.amount_spent_plus_fee))/2 end as profit,\n  case when c.network_name_short != 'WL' then sum(a.amount_revenue_approved)-sum(a.amount_spent_plus_fee) else (sum(a.amount_revenue_approved)-sum(a.amount_spent_plus_fee))/2 end as net_profit, \n  sum(a.amount_conversion) as tot_conversions,\n  sum(a.conversions_pending) as conversions_pending,\n  sum(a.conversions_approved) as conversions_approved,\n  sum(a.conversions_rejected) as conversions_rejected,\n  sum(a.amount_revenue_h) as tot_revenue_h, \n  sum(a.amount_revenue_pending_h) as amount_revenue_pending_h, \n  sum(a.amount_revenue_approved_h) as amount_revenue_approved_h, \n  sum(a.amount_revenue_rejected_h) as amount_revenue_rejected_h, \n  sum(a.amount_revenue_h)- sum(amount_spent) as profit_h, \n  sum(a.amount_revenue_approved_h)- sum(amount_spent_plus_fee) as net_profit_h, \n  sum(a.conversions_total_h) as tot_conversions_h,\n  sum(a.conversions_pending_h) as conversions_pending_h,\n  sum(a.conversions_approved_h) as conversions_approved_h,\n  sum(a.conversions_rejected_h) as conversions_rejected_h,\nsum(amount_revenue - amount_spent_plus_fee)/sum(case when amount_spent_plus_fee = 0 then 1 else amount_spent_plus_fee end)*100 as tot_roi,\nsum(amount_revenue_h - amount_spent_plus_fee)/sum(case when amount_spent_plus_fee = 0 then 1 else amount_spent_plus_fee end)*100 as tot_roi_h,\nsum(amount_revenue_approved - amount_spent_plus_fee)/sum(case when amount_spent_plus_fee = 0 then 1 else amount_spent_plus_fee end)*100 as appr_roi,\nsum(conversions_rejected)/(case when sum(amount_conversion+conversions_rejected) = 0 then 1 else sum(amount_conversion+conversions_rejected) end)*100 as rej_rate,\n(sum(conversions_approved)-sum(a.conversions_pending))/(case when sum(amount_conversion) = 0 then 1 else sum(amount_conversion) end)*100 as approv_rate,\nsum(conversions_rejected_h)/(case when sum(conversions_total_h+conversions_rejected_h) = 0 then 1 else sum(conversions_total_h+conversions_rejected_h) end)*100 as rej_rate_h,\n(sum(conversions_approved_h)-sum(a.conversions_pending_h))/(case when sum(conversions_total_h) = 0 then 1 else sum(conversions_total_h) end)*100 as approv_rate_h,\nb.fk_network_id\nFROM \n  public.\"user_financial\" a\n  INNER JOIN public.\"user_network\" b  ON (a.fk_user_id = b.fk_user_id and a.fk_user_network_id = b.user_network_id)\n\tINNER JOIN public.\"network\" c on (c.network_id = b.fk_network_id)\nwhere 1 = 1\nand c.network_name_short != 'AW'\nand a.financial_date >= to_date('{{moment(DateFrom.selectedDate).format('YYYY-DD-MM')}}','YYYY-DD-MM')\nand a.financial_date <= to_date('{{moment(DateTo.selectedDate).format('YYYY-DD-MM')}}','YYYY-DD-MM')\nand (text(a.fk_user_id) IN ({{\"'\" + MultiSelectUsers.selectedOptionValues.join(\"', '\") + \"'\"}}) OR text(a.fk_user_id) = '{{appsmith.store.myUser}}' )\nand ({{SelectTSFront.selectedOptionValues.length == 0}} OR text(b.fk_ts_id) IN ({{\"'\" + SelectTSFront.selectedOptionValues.join(\"', '\") + \"'\"}}))\ngroup by b.network_other_name, c.net_logo, c.network_name_short, b.fk_network_id\norder by 3 desc\n",
      "selfReferencingDataPaths": [],
      "pluginSpecifiedTemplates": [
        {
          "value": false
        }
      ]
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "\"'\" + MultiSelectUsers.selectedOptionValues.join(\"', '\") + \"'\"",
      "\"'\" + SelectTSFront.selectedOptionValues.join(\"', '\") + \"'\"",
      "SelectTSFront.selectedOptionValues.length == 0",
      "appsmith.store.myUser",
      "moment(DateFrom.selectedDate).format('YYYY-DD-MM')",
      "moment(DateTo.selectedDate).format('YYYY-DD-MM')"
    ],
    "userSetOnLoad": true,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": [],
    "createdAt": "2023-05-16T07:33:34Z"
  },
  "id": "Network Analysis Admin_user_financial_period",
  "deleted": false,
  "gitSyncId": "63c3151532584b547fffe91b_641c04808f7e5b7bc5de4f56"
}