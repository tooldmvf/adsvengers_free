{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "InsertAccountsAPI",
    "fullyQualifiedName": "JSObject1.InsertAccountsAPI",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "LInked FB Act Utility",
    "collectionId": "LInked FB Act Utility_JSObject1",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  const new_Arr = [];\n  var bm_res = await GetBusinesses.run();\n  for (let result of bm_res.data) {\n    delete Object.assign(result, {\n      bm_id: result.id\n    })['id'];\n    delete Object.assign(result, {\n      bm_name: result.name\n    })['name'];\n    result['fk_ts_id'] = '6719b3bc-e4b5-41dd-a04c-4323dc921a42';\n    new_Arr.push(result);\n  }\n  await insert_all_BM.run({\n    bm_json: new_Arr\n  });\n  for (let i = 0; i < new_Arr.length; i++) {\n    let arr_act = [];\n    const act_id = await GetAccounts.run({\n      bizId: new_Arr[i].bm_id\n    });\n    var client_owner = '';\n    if (act_id['client_ad_accounts']) client_owner = 'client_ad_accounts';\n    if (act_id['owned_ad_accounts']) client_owner = 'owned_ad_accounts';\n    if (client_owner.length > 0) {\n      for (let result of act_id[client_owner].data) {\n        delete Object.assign(result, {\n          ad_account_id: result.id\n        })['id'];\n        delete Object.assign(result, {\n          ad_account_name: result.name\n        })['name'];\n        delete Object.assign(result, {\n          fk_bm_id: result.owner\n        })['owner'];\n        result['fk_bm_id'] = new_Arr[i].bm_id;\n        arr_act.push(result);\n      }\n      await insert_all_AdAct.run({\n        act_json: arr_act\n      });\n      if (act_id[client_owner].paging.next) {\n        let seguita = true;\n        let act_id2 = await GetAccountNextPage.run({\n          next_page: act_id[client_owner].paging.next\n        });\n        for (let result of act_id2.data) {\n          delete Object.assign(result, {\n            ad_account_id: result.id\n          })['id'];\n          delete Object.assign(result, {\n            ad_account_name: result.name\n          })['name'];\n          delete Object.assign(result, {\n            fk_bm_id: result.owner\n          })['owner'];\n          result['fk_bm_id'] = new_Arr[i].bm_id;\n          arr_act.push(result);\n        }\n        await insert_all_AdAct.run({\n          act_json: arr_act\n        });\n        if (act_id2.paging.hasOwnProperty('next')) {\n          var param_next_ow = act_id2.paging.next;\n          do {\n            let act_id3 = await GetAccountNextPage.run({\n              next_page: param_next_ow\n            });\n            for (let result of act_id3.data) {\n              delete Object.assign(result, {\n                ad_account_id: result.id\n              })['id'];\n              delete Object.assign(result, {\n                ad_account_name: result.name\n              })['name'];\n              delete Object.assign(result, {\n                fk_bm_id: result.owner\n              })['owner'];\n              result['fk_bm_id'] = new_Arr[i].bm_id;\n              arr_act.push(result);\n            }\n            await insert_all_AdAct.run({\n              act_json: arr_act\n            });\n            param_next_ow = act_id3.paging.next;\n            if (!act_id3.paging.next) {\n              console.log('vado nel false');\n              seguita = false;\n            }\n          } while (seguita);\n        }\n      }\n    }\n  }\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n  const new_Arr = [];\n  var bm_res = await GetBusinesses.run();\n  for (let result of bm_res.data) {\n    delete Object.assign(result, {\n      bm_id: result.id\n    })['id'];\n    delete Object.assign(result, {\n      bm_name: result.name\n    })['name'];\n    result['fk_ts_id'] = '6719b3bc-e4b5-41dd-a04c-4323dc921a42';\n    new_Arr.push(result);\n  }\n  await insert_all_BM.run({\n    bm_json: new_Arr\n  });\n  for (let i = 0; i < new_Arr.length; i++) {\n    let arr_act = [];\n    const act_id = await GetAccounts.run({\n      bizId: new_Arr[i].bm_id\n    });\n    var client_owner = '';\n    if (act_id['client_ad_accounts']) client_owner = 'client_ad_accounts';\n    if (act_id['owned_ad_accounts']) client_owner = 'owned_ad_accounts';\n    if (client_owner.length > 0) {\n      for (let result of act_id[client_owner].data) {\n        delete Object.assign(result, {\n          ad_account_id: result.id\n        })['id'];\n        delete Object.assign(result, {\n          ad_account_name: result.name\n        })['name'];\n        delete Object.assign(result, {\n          fk_bm_id: result.owner\n        })['owner'];\n        result['fk_bm_id'] = new_Arr[i].bm_id;\n        arr_act.push(result);\n      }\n      await insert_all_AdAct.run({\n        act_json: arr_act\n      });\n      if (act_id[client_owner].paging.next) {\n        let seguita = true;\n        let act_id2 = await GetAccountNextPage.run({\n          next_page: act_id[client_owner].paging.next\n        });\n        for (let result of act_id2.data) {\n          delete Object.assign(result, {\n            ad_account_id: result.id\n          })['id'];\n          delete Object.assign(result, {\n            ad_account_name: result.name\n          })['name'];\n          delete Object.assign(result, {\n            fk_bm_id: result.owner\n          })['owner'];\n          result['fk_bm_id'] = new_Arr[i].bm_id;\n          arr_act.push(result);\n        }\n        await insert_all_AdAct.run({\n          act_json: arr_act\n        });\n        if (act_id2.paging.hasOwnProperty('next')) {\n          var param_next_ow = act_id2.paging.next;\n          do {\n            let act_id3 = await GetAccountNextPage.run({\n              next_page: param_next_ow\n            });\n            for (let result of act_id3.data) {\n              delete Object.assign(result, {\n                ad_account_id: result.id\n              })['id'];\n              delete Object.assign(result, {\n                ad_account_name: result.name\n              })['name'];\n              delete Object.assign(result, {\n                fk_bm_id: result.owner\n              })['owner'];\n              result['fk_bm_id'] = new_Arr[i].bm_id;\n              arr_act.push(result);\n            }\n            await insert_all_AdAct.run({\n              act_json: arr_act\n            });\n            param_next_ow = act_id3.paging.next;\n            if (!act_id3.paging.next) {\n              console.log('vado nel false');\n              seguita = false;\n            }\n          } while (seguita);\n        }\n      }\n    }\n  }\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "LInked FB Act Utility_JSObject1.InsertAccountsAPI",
  "deleted": false,
  "gitSyncId": "63c3151532584b547fffe91b_63c3d85008759c023fd9892c"
}