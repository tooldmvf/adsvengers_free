{
  "pluginType": "DB",
  "pluginId": "postgres-plugin",
  "unpublishedAction": {
    "name": "SelectOFFERSUser",
    "datasource": {
      "name": "DO_db-postgresql-adsv",
      "pluginId": "postgres-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "id": "DO_db-postgresql-adsv",
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "NetworkOffers Admin",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "SELECT \t\n\tsum(a.amount_spent_plus_fee) spent,\n\tsum(a.amount_revenue) revenue,\n\tsum(a.amount_revenue)-sum(a.amount_spent_plus_fee) profit,\n\tsum(a.amount_spent) spent_no_fees,\n\tcase \n\t\twhen (((sum(a.amount_revenue) - sum(a.amount_spent_plus_fee))/case when sum(a.amount_spent_plus_fee) = 0 then 1 else sum(a.amount_spent_plus_fee) end) *100) <0 then '#fef2f2'\n\t\twhen (((sum(a.amount_revenue) - sum(a.amount_spent_plus_fee))/case when sum(a.amount_spent_plus_fee) = 0 then 1 else sum(a.amount_spent_plus_fee) end) *100) <30 then '#fefce8'\n\t\telse '#f0fdf4' end as \"row_color\",\nsum(a.amount_conversion) convs,\nsum(a.amount_spent_plus_fee)/(case when sum(a.amount_conversion)= 0 then 1 else sum(a.amount_conversion) end) \"CPA\",\nsum(a.amount_revenue)/(case when sum(a.amount_conversion)= 0 then 1 else sum(a.amount_conversion) end) \"Payout\",\nf.network_name_short,\n(sum(a.amount_revenue)-sum(a.amount_spent_plus_fee))/(case when sum(a.amount_spent_plus_fee) = 0 then 1 else sum(a.amount_spent_plus_fee) END)*100 as ROI,\nb.user_email_network\nfrom public.user_financial a\nINNER JOIN public.user_network b ON (a.fk_user_id = b.fk_user_id and a.fk_user_network_id = b.user_network_id)\nINNER JOIN public.offer c ON (b.user_network_id = c.fk_user_network_id and a.fk_offer_id = c.offer_id)\nINNER JOIN public.offer_category d ON (d.off_cat_id = c.fk_off_cat_id)\ninner join public.traffic_source e on (e.ts_id = b.fk_ts_id)\ninner join public.network f on (f.network_id = b.fk_network_id)\ninner join public.user_profiles g on (g.fk_user_id = a.fk_user_id)\nwhere 1 = 1\nAND (lower(c.offer_name) like lower('%{{SearchCamp.inputText}}%') OR lower(c.offer_name_suffix) like lower('%{{SearchCamp.inputText}}%'))\nand c.offer_id != 'WU'\nand ({{!SelectUser.selectedOptionValue}} OR (text(a.fk_user_id) IN ({{\"'\" + SelectUser.selectedOptionValue + \"'\"}})))\nand a.financial_date >= to_date('{{moment(DateFrom.selectedDate).format('YYYY-DD-MM')}}','YYYY-DD-MM')\nand a.financial_date <= to_date('{{moment(DateTo.selectedDate).format('YYYY-DD-MM')}}','YYYY-DD-MM')\nand ({{MSNetwork.selectedOptionValues.length == 0}} OR text(b.fk_network_id) IN ({{\"'\" + MSNetwork.selectedOptionValues.join(\"', '\") + \"'\"}}))\nand ({{MSTrSource.selectedOptionValues.length == 0}} OR text(e.ts_id) IN ({{\"'\" + MSTrSource.selectedOptionValues.join(\"', '\") + \"'\"}}))\ngroup by \n\tf.network_name_short,\n\tb.user_email_network\n\thaving (sum(a.amount_revenue)>0 OR sum(a.amount_spent_plus_fee)>0)\norder by {{!Select1.selectedOptionValue ? '3 desc' : Select1.selectedOptionValue}}\n",
      "selfReferencingDataPaths": [],
      "pluginSpecifiedTemplates": [
        {
          "value": false
        }
      ]
    },
    "executeOnLoad": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "!Select1.selectedOptionValue ? '3 desc' : Select1.selectedOptionValue",
      "!SelectUser.selectedOptionValue",
      "\"'\" + MSNetwork.selectedOptionValues.join(\"', '\") + \"'\"",
      "\"'\" + MSTrSource.selectedOptionValues.join(\"', '\") + \"'\"",
      "\"'\" + SelectUser.selectedOptionValue + \"'\"",
      "MSNetwork.selectedOptionValues.length == 0",
      "MSTrSource.selectedOptionValues.length == 0",
      "SearchCamp.inputText",
      "moment(DateFrom.selectedDate).format('YYYY-DD-MM')",
      "moment(DateTo.selectedDate).format('YYYY-DD-MM')"
    ],
    "userSetOnLoad": true,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "NetworkOffers Admin_SelectOFFERSUser",
  "deleted": false,
  "gitSyncId": "646331cd28902b71518db22a_647efe42270e40370738da24"
}