{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "insert_raw_wf_off3",
    "fullyQualifiedName": "wf_offers.insert_raw_wf_off3",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Campaign Name Builder Utility",
    "collectionId": "Campaign Name Builder Utility_wf_offers",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  const object = await get_all_wf_offers.run();\n  for (const i in object) {\n    const res = await get_wf_offers.run({\n      off_id: object[i].offer_id,\n      user_key: object[i].user_api_key\n    });\n    if (res.data.readCampaigns.length > 0) {\n      await insert_wf_raw_offers.run({\n        name: res.data.readCampaigns[0].name,\n        id: res.data.readCampaigns[0].id,\n        categories: res.data.readCampaigns[0].categories,\n        status: res.data.readCampaigns[0].status,\n        payout: res.data.readCampaigns[0].DefaultCommission.amount\n      });\n    }\n  }\n  await update_wf_categ.run();\n  await get_user_offers_table.run();\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n  const object = await get_all_wf_offers.run();\n  for (const i in object) {\n    const res = await get_wf_offers.run({\n      off_id: object[i].offer_id,\n      user_key: object[i].user_api_key\n    });\n    if (res.data.readCampaigns.length > 0) {\n      await insert_wf_raw_offers.run({\n        name: res.data.readCampaigns[0].name,\n        id: res.data.readCampaigns[0].id,\n        categories: res.data.readCampaigns[0].categories,\n        status: res.data.readCampaigns[0].status,\n        payout: res.data.readCampaigns[0].DefaultCommission.amount\n      });\n    }\n  }\n  await update_wf_categ.run();\n  await get_user_offers_table.run();\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Campaign Name Builder Utility_wf_offers.insert_raw_wf_off3",
  "deleted": false,
  "gitSyncId": "63c3151532584b547fffe91b_63c5027008759c023fd9894f"
}