{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "store_user_profile1",
    "fullyQualifiedName": "Utils.store_user_profile1",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Dashboard",
    "collectionId": "Dashboard_Utils",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  if (appsmith.store.from_page != 'login') {\n    const result = await get_all_users.run();\n    await setTimeout(() => {}, 2000);\n    await user_financial_period.run();\n    await user_financialNetwork.run();\n    await user_financialOffers.run();\n    await user_financial_rej_rate_24h.run();\n    await user_financial_active_offers.run();\n    await user_financial_trend.run();\n    return;\n  }\n  const user = await get_user.run();\n  storeValue('id', user.id);\n  storeValue('myUser', user.id);\n  storeValue('myUsers', [user.id]);\n  storeValue('myEmail', user.email);\n  const user_prof = await get_user_profile.run({\n    user_id: user.id\n  });\n  storeValue('first_name', user_prof[0].first_name ? user_prof[0].first_name : user.data.user_metadata.full_name.split(' ')[0]);\n  storeValue('last_name', user_prof[0].last_name ? user_prof[0].last_name : user.data.user_metadata.full_name.split(' ')[1]);\n  storeValue('role_level', user_prof[0].role_level);\n  await update_profile.run();\n  storeValue('type', undefined);\n  storeValue('from_page', undefined);\n  const result2 = await get_all_users.run();\n  await setTimeout(() => {}, 2000);\n  await user_financial_period.run();\n  await user_financialNetwork.run();\n  await user_financialOffers.run();\n  await user_financial_rej_rate_24h.run();\n  await user_financial_active_offers.run();\n  await user_financial_trend.run();\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n  if (appsmith.store.from_page != 'login') {\n    const result = await get_all_users.run();\n    await setTimeout(() => {}, 2000);\n    await user_financial_period.run();\n    await user_financialNetwork.run();\n    await user_financialOffers.run();\n    await user_financial_rej_rate_24h.run();\n    await user_financial_active_offers.run();\n    await user_financial_trend.run();\n    return;\n  }\n  const user = await get_user.run();\n  storeValue('id', user.id);\n  storeValue('myUser', user.id);\n  storeValue('myUsers', [user.id]);\n  storeValue('myEmail', user.email);\n  const user_prof = await get_user_profile.run({\n    user_id: user.id\n  });\n  storeValue('first_name', user_prof[0].first_name ? user_prof[0].first_name : user.data.user_metadata.full_name.split(' ')[0]);\n  storeValue('last_name', user_prof[0].last_name ? user_prof[0].last_name : user.data.user_metadata.full_name.split(' ')[1]);\n  storeValue('role_level', user_prof[0].role_level);\n  await update_profile.run();\n  storeValue('type', undefined);\n  storeValue('from_page', undefined);\n  const result2 = await get_all_users.run();\n  await setTimeout(() => {}, 2000);\n  await user_financial_period.run();\n  await user_financialNetwork.run();\n  await user_financialOffers.run();\n  await user_financial_rej_rate_24h.run();\n  await user_financial_active_offers.run();\n  await user_financial_trend.run();\n}"
    ],
    "userSetOnLoad": true,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Dashboard_Utils.store_user_profile1",
  "deleted": false,
  "gitSyncId": "63c3151532584b547fffe91b_641c07dd8f7e5b7bc5de5037"
}