{
  "gitSyncId": "63936c0b4b95806da2da5de7_639adac47c323677ddd831f0",
  "id": "Dashboard_user_financial_period",
  "pluginId": "postgres-plugin",
  "pluginType": "DB",
  "unpublishedAction": {
    "actionConfiguration": {
      "body": "select count (DISTINCT fk_offer_id) as active_offers,\nsum(tot_revenue) as tot_revenue, \nsum(amount_revenue_pending) as amount_revenue_pending, \nsum(amount_revenue_approved) as amount_revenue_approved, \nsum(amount_revenue_rejected) as amount_revenue_rejected, \nsum(tot_revenue_h) as tot_revenue_h, \nsum(amount_revenue_pending_h) as amount_revenue_pending_h, \nsum(amount_revenue_approved_h) as amount_revenue_approved_h, \nsum(amount_revenue_rejected_h) as amount_revenue_rejected_h, \nsum(spent) as spent, \nsum(spent_wfees) as spent_wfees, \nsum(profit) as profit, \nsum(profit_h) as profit_h, \nsum(net_profit) as net_profit, \nsum(net_profit_h) as net_profit_h, \nsum(tot_conversions) as tot_conversions,\nsum(conversions_pending) as conversions_pending,\nsum(conversions_approved) as conversions_approved,\nsum(conversions_rejected) as conversions_rejected,\nsum(tot_conversions_h) as tot_conversions_h,\nsum(conversions_pending_h) as conversions_pending_h,\nsum(conversions_approved_h) as conversions_approved_h,\nsum(conversions_rejected_h) as conversions_rejected_h\nfrom (\nSELECT \n  a.fk_offer_id,\n  sum(a.amount_revenue) as tot_revenue, \n  sum(a.amount_revenue_pending) as amount_revenue_pending, \n  sum(a.amount_revenue_approved) as amount_revenue_approved, \n  sum(a.amount_revenue_rejected) as amount_revenue_rejected, \n  sum(a.amount_revenue_h) as tot_revenue_h, \n  sum(a.amount_revenue_pending_h) as amount_revenue_pending_h, \n  sum(a.amount_revenue_approved_h) as amount_revenue_approved_h, \n  sum(a.amount_revenue_rejected_h) as amount_revenue_rejected_h, \n  sum(a.amount_spent) as spent, \n  sum(a.amount_spent_plus_fee) as spent_wfees, \n  case when c.network_name_short != 'WL' then sum(a.amount_revenue)-sum(a.amount_spent_plus_fee) else (sum(a.amount_revenue)-sum(a.amount_spent_plus_fee))/2 end as profit, \n  case when c.network_name_short != 'WL' then sum(a.amount_revenue_h)-sum(a.amount_spent_plus_fee) else (sum(a.amount_revenue_h)-sum(a.amount_spent_plus_fee))/2 end as profit_h,\n  case when c.network_name_short != 'WL' then sum(a.amount_revenue_approved)-sum(a.amount_spent_plus_fee) else (sum(a.amount_revenue_approved)-sum(a.amount_spent_plus_fee))/2 end as net_profit,\n  case when c.network_name_short != 'WL' then sum(a.amount_revenue_approved_h)-sum(a.amount_spent_plus_fee) else (sum(a.amount_revenue_approved_h)-sum(a.amount_spent_plus_fee))/2 end as net_profit_h,\n  sum(a.amount_conversion) as tot_conversions,\n  sum(a.conversions_pending) as conversions_pending,\n  sum(a.conversions_approved) as conversions_approved,\n  sum(a.conversions_rejected) as conversions_rejected,\n  sum(a.conversions_total_h) as tot_conversions_h,\n  sum(a.conversions_pending_h) as conversions_pending_h,\n  sum(a.conversions_approved_h) as conversions_approved_h,\n  sum(a.conversions_rejected_h) as conversions_rejected_h\nFROM \n  public.user_financial a\n\tINNER JOIN public.user_network b on (a.fk_user_network_id = b.user_network_id)\n\tINNER JOIN public.network c on (c.network_id = b.fk_network_id)\nwhere 1 = 1\nand a.financial_date >= to_date('{{moment(DateFrom.selectedDate).format('YYYY-DD-MM')}}','YYYY-DD-MM')\nand a.financial_date <= to_date('{{moment(DateTo.selectedDate).format('YYYY-DD-MM')}}','YYYY-DD-MM')\nand (text(a.fk_user_id) IN ({{\"'\" + MultiSelectUsers.selectedOptionValues.join(\"', '\") + \"'\"}}) OR text(a.fk_user_id) = '{{appsmith.store.myUser}}' )\nand ({{SelectNetwork.selectedOptionValues.length == 0}} OR text(b.fk_network_id) IN ({{\"'\" + SelectNetwork.selectedOptionValues.join(\"', '\") + \"'\"}}))\nand ({{SelectSubNet.selectedOptionValues.length == 0}} OR text(b.user_network_id) IN ({{\"'\" + SelectSubNet.selectedOptionValues.join(\"', '\") + \"'\"}}))\nand ({{SelectTSFront.selectedOptionValues.length == 0}} OR text(b.fk_ts_id) IN ({{\"'\" + SelectTSFront.selectedOptionValues.join(\"', '\") + \"'\"}}))\ngroup by c.network_name_short,a.fk_offer_id) z\n",
      "encodeParamsToggle": true,
      "paginationType": "NONE",
      "pluginSpecifiedTemplates": [
        {
          "value": false
        }
      ],
      "timeoutInMillisecond": 10000
    },
    "confirmBeforeExecute": false,
    "datasource": {
      "id": "DO_db-postgresql-adsv",
      "isAutoGenerated": false,
      "name": "DO_db-postgresql-adsv",
      "pluginId": "postgres-plugin"
    },
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "name": "user_financial_period",
    "pageId": "Dashboard",
    "runBehaviour": "MANUAL",
    "userSetOnLoad": true
  }
}