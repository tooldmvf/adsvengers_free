{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "fill_camp_table",
    "fullyQualifiedName": "FB_Api_get_campaigns.fill_camp_table",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Facebook API",
    "collectionId": "Facebook API_FB_Api_get_campaigns",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  storeValue('myProgress1', 0);\n  await truncate_raw_user_fb_campaign.run();\n  const res = await get_user_fb_account.run();\n  const totalRun = await Object.keys(res).length;\n  var progress = 0;\n  for (const i in res) {\n    const res2 = await fb_campaign_list.run({\n      ad_account_id: res[i].ad_account_id\n    });\n    if (('data' in res2)) {\n      for (const ii in res2.data) {\n        if (res2.data[ii].name.includes('|') && res2.data[ii].name.includes(' -') && (res2.data[ii].name.substring(2, 3) === '|' && res2.data[ii].name.substring(4, 5) === '|')) {\n          var campaign_offer_id = res2.data[ii].name.substring(5, res2.data[ii].name.search('-')).trim();\n          var off_cat_short = res2.data[ii].name.substring(3, 4).trim();\n          var net_name_short = res2.data[ii].name.substring(0, 2).trim();\n          await insert_raw_user_fb_camp.run({\n            fk_user_id: res[i].fk_user_id,\n            fk_bm_id: res[i].fk_bm_id,\n            fk_ad_account_id: res[i].ad_account_id,\n            campaign_id: res2.data[ii].id,\n            campaign_offer_id: campaign_offer_id,\n            campaign_name: res2.data[ii].name,\n            spent_rate_fees: res[i].spent_rate_fees,\n            off_cat_short: off_cat_short,\n            net_name_short: net_name_short\n          });\n          await console.log(res[i].ad_account_id);\n          await delete_raw_user_fb_fin_data.run({\n            fk_user_id: res[i].fk_user_id,\n            fk_bm_id: res[i].fk_bm_id,\n            fk_ad_account_id: res[i].ad_account_id,\n            campaign_id: res2.data[ii].id\n          });\n        }\n      }\n    }\n    progress++;\n    await storeValue('myProgress1', progress / totalRun * 100);\n  }\n  await get_raw_user_fb_campaign.run();\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "clientSideExecution": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n  storeValue('myProgress1', 0);\n  await truncate_raw_user_fb_campaign.run();\n  const res = await get_user_fb_account.run();\n  const totalRun = await Object.keys(res).length;\n  var progress = 0;\n  for (const i in res) {\n    const res2 = await fb_campaign_list.run({\n      ad_account_id: res[i].ad_account_id\n    });\n    if (('data' in res2)) {\n      for (const ii in res2.data) {\n        if (res2.data[ii].name.includes('|') && res2.data[ii].name.includes(' -') && (res2.data[ii].name.substring(2, 3) === '|' && res2.data[ii].name.substring(4, 5) === '|')) {\n          var campaign_offer_id = res2.data[ii].name.substring(5, res2.data[ii].name.search('-')).trim();\n          var off_cat_short = res2.data[ii].name.substring(3, 4).trim();\n          var net_name_short = res2.data[ii].name.substring(0, 2).trim();\n          await insert_raw_user_fb_camp.run({\n            fk_user_id: res[i].fk_user_id,\n            fk_bm_id: res[i].fk_bm_id,\n            fk_ad_account_id: res[i].ad_account_id,\n            campaign_id: res2.data[ii].id,\n            campaign_offer_id: campaign_offer_id,\n            campaign_name: res2.data[ii].name,\n            spent_rate_fees: res[i].spent_rate_fees,\n            off_cat_short: off_cat_short,\n            net_name_short: net_name_short\n          });\n          await console.log(res[i].ad_account_id);\n          await delete_raw_user_fb_fin_data.run({\n            fk_user_id: res[i].fk_user_id,\n            fk_bm_id: res[i].fk_bm_id,\n            fk_ad_account_id: res[i].ad_account_id,\n            campaign_id: res2.data[ii].id\n          });\n        }\n      }\n    }\n    progress++;\n    await storeValue('myProgress1', progress / totalRun * 100);\n  }\n  await get_raw_user_fb_campaign.run();\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Facebook API_FB_Api_get_campaigns.fill_camp_table",
  "deleted": false,
  "gitSyncId": "63c3151532584b547fffe91b_63ce4e66f0df7a5c0ff1967f"
}